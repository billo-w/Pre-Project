name: Python CI/CD Pipeline

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10' # Match your development environment

    - name: Install and upgrade core packaging tools & Dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel # Upgrade core tools first
        pip install -r requirements.txt

    - name: Lint with Flake8
      # KSB: Code Quality
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Scan for Vulnerabilities with pip-audit
      # KSBs: K5, S9 (Dependency Checking)
      run: |
        pip install pip-audit # Ensure pip-audit is installed in the current env
        pip-audit # Run the audit

    - name: Run Tests with Pytest
      # KSBs: K14, S14 (TDD and Unit Testing)
      # We set environment variables needed for the test configuration.
      env:
        FLASK_CONFIG: "testing" # Tells the app to use the TestingConfig
        FLASK_APP: "wsgi.py" # Point to wsgi.py as the entry point for Flask CLI
        PYTHONPATH: "." # Add project root to Python's module search path
        # WTF_CSRF_ENABLED: "False" # Usually handled by TestingConfig
        # DATABASE_URL: "sqlite:///:memory:" # Usually handled by TestingConfig
      run: |
        pytest --cov=./ --cov-report=xml --cov-report=html

    # Optional: Upload coverage reports
    # - name: Upload coverage reports to Codecov
    #   uses: codecov/codecov-action@v3
    #   with:
    #     token: ${{ secrets.CODECOV_TOKEN }} # if you use Codecov
    #     files: ./coverage.xml
    #     fail_ci_if_error: true
